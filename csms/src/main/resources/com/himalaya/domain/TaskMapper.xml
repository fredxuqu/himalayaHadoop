<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.himalaya.dao.TaskDOMapper" >
  <resultMap id="BaseResultMap" type="com.himalaya.entity.TaskDO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="taskName" property="taskname" jdbcType="CHAR" />
    <result column="description" property="description" jdbcType="CHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="executor" property="executor" jdbcType="CHAR" />
    <result column="checklistid" property="checklistid" jdbcType="BIGINT" />
  </resultMap>  
  <resultMap id="ResultMapWithBLOBs" type="com.himalaya.entity.TaskDO" extends="BaseResultMap" >
    <result column="pictures" property="pictures" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, taskName, description, type, status, executor, checklistid
  </sql>
  <sql id="Blob_Column_List" >
    pictures
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.himalaya.entity.TaskDOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.himalaya.entity.TaskDOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.himalaya.entity.TaskDOExample" >
    delete from tb_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.himalaya.entity.TaskDO" >
    insert into tb_task (id, taskName, description, 
      type, status, executor, checklistid, 
      pictures)
    values (#{id,jdbcType=BIGINT}, #{taskname,jdbcType=CHAR}, #{description,jdbcType=CHAR}, 
      #{type,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, #{executor,jdbcType=CHAR}, #{checklistid,jdbcType=BIGINT}, 
      #{pictures,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.himalaya.entity.TaskDO" >
    insert into tb_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="taskname != null" >
        taskName,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="executor != null" >
        executor,
      </if>
      <if test="checklistid != null" >
        checklistid,
      </if>
      <if test="pictures != null" >
        pictures,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="taskname != null" >
        #{taskname,jdbcType=CHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="executor != null" >
        #{executor,jdbcType=CHAR},
      </if>
      <if test="checklistid != null" >
        #{checklistid,jdbcType=BIGINT},
      </if>
      <if test="pictures != null" >
        #{pictures,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.himalaya.entity.TaskDOExample" resultType="java.lang.Integer" >
    select count(*) from tb_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_task
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.taskname != null" >
        taskName = #{record.taskname,jdbcType=CHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=CHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.executor != null" >
        executor = #{record.executor,jdbcType=CHAR},
      </if>
      <if test="record.checklistid != null" >
        checklistid = #{record.checklistid,jdbcType=BIGINT},
      </if>
      <if test="record.pictures != null" >
        pictures = #{record.pictures,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update tb_task
    set id = #{record.id,jdbcType=BIGINT},
      taskName = #{record.taskname,jdbcType=CHAR},
      description = #{record.description,jdbcType=CHAR},
      type = #{record.type,jdbcType=INTEGER},
      status = #{record.status,jdbcType=CHAR},
      executor = #{record.executor,jdbcType=CHAR},
      checklistid = #{record.checklistid,jdbcType=BIGINT},
      pictures = #{record.pictures,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_task
    set id = #{record.id,jdbcType=BIGINT},
      taskName = #{record.taskname,jdbcType=CHAR},
      description = #{record.description,jdbcType=CHAR},
      type = #{record.type,jdbcType=INTEGER},
      status = #{record.status,jdbcType=CHAR},
      executor = #{record.executor,jdbcType=CHAR},
      checklistid = #{record.checklistid,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.himalaya.entity.TaskDO" >
    update tb_task
    <set >
      <if test="taskname != null" >
        taskName = #{taskname,jdbcType=CHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="executor != null" >
        executor = #{executor,jdbcType=CHAR},
      </if>
      <if test="checklistid != null" >
        checklistid = #{checklistid,jdbcType=BIGINT},
      </if>
      <if test="pictures != null" >
        pictures = #{pictures,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.himalaya.entity.TaskDO" >
    update tb_task
    set taskName = #{taskname,jdbcType=CHAR},
      description = #{description,jdbcType=CHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      executor = #{executor,jdbcType=CHAR},
      checklistid = #{checklistid,jdbcType=BIGINT},
      pictures = #{pictures,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.himalaya.entity.TaskDO" >
    update tb_task
    set taskName = #{taskname,jdbcType=CHAR},
      description = #{description,jdbcType=CHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      executor = #{executor,jdbcType=CHAR},
      checklistid = #{checklistid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>